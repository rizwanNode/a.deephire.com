{
   "swagger": "2.0",
   "info": {
      "version": "1.0.0",
      "title": "DeepHireNodeAPI",
      "description": "Automate the recruiting process with one-way video interviews"
   },
   "basePath": "/v1",
   "consumes": [
      "application/json"
   ],
   "produces": [
      "application/json"
   ],
   "definitions": {
      "Comment": {
         "type": "object",
         "title": "Comment",
         "required": [
            "comment",
            "time"
         ],
         "properties": {
            "_id": {
               "type": "string"
            },
            "comment": {
               "type": "string",
               "example": "What do you think makes you a good fit for this role?"
            },
            "time": {
               "type": "number",
               "example": 8
            }
         }
      },
      "Feedback": {
         "type": "object",
         "title": "Feedback"
      },
      "EmailBody": {
         "type": "object",
         "title": "email",
         "required": [
            "recipients",
            "template"
         ],
         "properties": {
            "videoId": "123456789",
            "recipients": {
               "type": "array",
               "items": {
                  "type": "string"
               },
               "example": [
                  "russell@deephire.com"
               ]
            },
            "template": {
               "type": "string",
               "example": "completed-interview-recruiter-notification"
            },
            "interviewName": {
               "type": "string",
               "example": "Russell's Test Interview"
            },
            "shortUrl": {
               "type": "string",
               "example": "https://deephire.com/test"
            }
         }
      },
      "InviteBody": {
         "type": "object",
         "title": "Invite",
         "required": [
            "invitedEmail",
            "role"
         ],
         "properties": {
            "invitedEmail": {
               "type": "string",
               "example": "russell@deephire.com"
            },
            "role": {
               "type": "string",
               "example": "admin"
            }
         }
      },
      "LiveRequestBody" : {
         "type": "object",
         "properties": {
           "interviewType": {
             "type": "string"
           },
           "candidateName": {
             "type": "string"
           },
           "candidateEmail": {
             "type": "string"
           },
           "interviewTime": {
             "type": "array",
             "items": 
               {
                 "type": "string"
               }
           },
           "clientName": {
             "type": "string"
           },
           "recording": {
            "type": "boolean"
          },
           "clientEmail": {
             "type": "string"
           },
           "jobName": {
             "type": "string"
           },
           "clientTitle": {
             "type": "string"
           },
           "clientCompany": {
             "type": "string"
           },
           "clientContactName": {
             "type": "string"
           },
           "clientContactEmail": {
             "type": "string"
           },
           "phone": {
             "type": "string"
           },
           "prepRoomTime": {
             "type": "array",
             "items": 
               {
                 "type": "string"
               }
               
           },
           "candidateDebriefTime": {
             "type": "string"
           },
           "clientDebriefTime": {
             "type": "string"
           },
           "candidateTemplate": {
             "type": "string"
           },
           "clientTemplate": {
             "type": "string"
           },
           "createdByTeam": {
             "type": "string"
           }
         },
         "required": [
           "interviewType",
           "candidateName",
           "candidateEmail",
           "interviewTime"
         ],
         "example": {
           "interviewType": "client",
           "candidateName": "Kyle Gates",
           "recording": true,
           "candidateEmail": "kyle@deephire.com",
           "interviewTime": ["2020-10-31T23:00:33.623Z", "2020-10-31T23:30:33.623Z"],
           "clientName": "Peter Smith",
           "clientEmail": "peter@deephire.com",
           "jobName": "Send Out Example",
           "clientTitle": "Sr. Data Scientist",
           "clientCompany": "Kent",
           "clientContactName": "Matt Smith",
           "clientContactEmail": "matt@deephire.com",
           "phone": "(330) 362-2448",
           "prepRoomTime": ["2020-10-22T22:15:03.734Z", "2020-10-22T22:45:03.734Z"],
           "candidateDebriefTime": "2020-10-31T23:00:09.169Z",
           "clientDebriefTime": "2020-10-31T07:00:00.910Z",
           "candidateTemplate": "<p>Candidate Prep Template</p>",
           "clientTemplate": "<p>Client Template</p>",
           "createdByTeam": "PT"
         }
       },
       
      "Live": {
         "type": "object",          
         "properties": {
            "_id": {
               "type": "string"
            },
            "interviewType": {
               "type": "string"
            },
            "candidateName": {
               "type": "string"
            },
            "candidateEmail": {
               "type": "string"
            },
            "interviewTime": {
               "type": "array",
               "items": {
                  "type": "string"
               }
            },
            "clientName": {
               "type": "string"
            },
            "clientEmail": {
               "type": "string"
            },
            "jobName": {
               "type": "string"
            },
            "clientTitle": {
               "type": "string"
            },
            "clientCompany": {
               "type": "string"
            },
            "clientContactName": {
               "type": "string"
            },
            "clientContactEmail": {
               "type": "string"
            },
            "prepRoomTime": {
               "type": "array",
               "items": {
                  "type": "string"
               }
            },
            "candidateTemplate": {
               "type": "string"
            },
            "clientTemplate": {
               "type": "string"
            },
            "createdBy": {
               "type": "string"
            },
            "companyId": {
               "type": "string"
            },
            "roomName": {
               "type": "string"
            },
            "interviewLink": {
               "type": "string"
            },
            "companyName": {
               "type": "string"
            },
            "recruiterName": {
               "type": "string"
            },
            "timestamp": {
               "type": "string"
            },
            "compositionSid": {
               "type": "array",
               "items": {
                  "type": "string"
               }
            },
            "recordingUrl": {
               "type": "array",
               "items": {
                  "type": "string"
               }
            },
            "roomSid": {
               "type": "array",
               "items": {
                  "type": "string"
               }
            },
            "recordingStatus": {
               "type": "string"
            },
            "participants": {
               "type": "object",
               "properties": {
                  "DynamicParticipantNameKey": {
                     "type": "object",
                     "properties": {
                        "role": {
                           "type": "string"
                        },
                        "notes": {
                           "type": "string"
                        }
                     }
                  }
               }
            },
            "comments": {
               "type": "array",
               "items": {
                  "type": "object",
                  "properties": {
                     "comment": {
                        "type": "string"
                     },
                     "time": {
                        "type": "number"
                     },
                     "_id": {
                        "type": "string"
                     }
                  }
               }
            }
         },
         "example": {
            "_id": "5f86f75e1e6a9b001aab9e49",
            "interviewType": "client",
            "candidateName": "Sendy S",
            "candidateEmail": "test@deephire.com",
            "interviewTime": ["2020-10-30T13:00:57.441Z", "2020-10-30T13:30:57.441Z"],
            "clientName": "Clienty C",
            "clientEmail": "client@deephire.com",
            "jobName": "Software Engineer",
            "clientTitle": "CEO of Testing",
            "clientCompany": "Galileo",
            "clientContactName": "Russell",
            "clientContactEmail": "russell@deephire.com",
            "prepRoomTime": ["2020-10-29T14:00:47.741Z", "2020-10-29T14:30:47.741Z"],
            "candidateTemplate": "<p>template example</p>",
            "createdBy": "russell@deephire.com",
            "companyId": "5dc5d305a4ea435efa57f644",
            "roomName": "5f86f75e1e6a9b001aab9e49",
            "interviewLink": "https://live.deephire.com/room/5f86f75e1e6a9b001aab9e49",
            "candidateUrl": "https://live.deephire.com/room/5f86f75e1e6a9b001aab9e49?role=candidate",
            "recruiterUrl": "https://live.deephire.com/room/5f86f75e1e6a9b001aab9e49?role=recruiter",
            "clientUrl": "https://live.deephire.com/room/5f86f75e1e6a9b001aab9e49?role=client",
            "companyName": "DeepHire",
            "recruiterName": "Russell R",
            "timestamp": "Wed Oct 14 2020 13:04:31 GMT+0000 (Coordinated Universal Time)",
            "compositionSid": [
              "CJf76cb9f50be5ba93d5eb2845008c601e"
            ],
            "recordingUrl": ["https://s3.amazonaws.com/deephire.data.public/live/CJf76cb9f50be5ba93d5eb2845008c601e.mp4"],
            "roomSid": [
              "RMc8fa0be454bfa436b898fddfd0ff44e6"
            ],
            "recordingStatus": "composition-available",
            "participants": {
              "theseKeysAreBasedOnPeoplesNamesWhoJoinTheRoom1": {
                "role": "client",
                "notes": "<p>Candidate notes example</p>",
                "feedback": 5
              },
              "theseKeysAreBasedOnPeoplesNamesWhoJoinTheRoom2": {
                  "role": "client",
                  "notes": "<p>Candidate notes example</p>",
                  "feedback": 5
                }
            },
            "comments": [
              {
                "comment": "Interview Started",
                "time": 27.291911,
                "_id": "5f9092a9c9e1c3001ab6a3f8"
              }
            ]
          }
          
         
         
         
         
      },
      "Participant": {
         "type": "object",
         "title": "Participant",
         "required": [
            "participantName"
         ],
         "properties": {
            "participantName": {
               "type": "string",
               "example": "Kyle Trusler"
            },
            "role": {
               "type": "string",
               "example": "admin"
            },
            "feedback": {
               "type": "number",
               "example": 5
            },
            "notes": {
               "type": "string",
               "example": "<div>hey</div>"
            }
         }
      },
      "CompanyBody": {
         "type": "object",
         "title": "company",
         "required": [
            "owner",
            "companyName"
         ],
         "properties": {
            "owner": {
               "type": "string",
               "example": "russell@deephire.com"
            },
            "companyName": {
               "type": "string",
               "example": "Forge"
            }
         }
      },
      "PutCompany": {
         "type": "object",
         "title": "company",
         "properties": {
            "companyName": {
               "type": "string",
               "example": "Forge"
            }
         }
      },
      "CandidateBody": {
         "type": "object",
         "title": "candidate",
         "properties": {
            "youtubeUrls": {
               "type": "array",
               "items": {
                  "type": "string"
               },
               "example": [
                  "https://www.youTube.com/watch?v=QSmXvcrtTpM",
                  "https://www.youTube.com/watch?v=emTHLFKcSWQ"
               ]
            }
         }
      },
      "ShortlistBody": {
         "type": "object",
         "title": "shortlist",
         "properties": {
            "userId": {
               "type": "string",
               "example": "exampleData"
            },
            "youtubeUrls": {
               "type": "array",
               "items": {
                  "type": "string"
               },
               "example": [
                  "ar1",
                  "ar3"
               ]
            }
         }
      },
      "ArchiveBody": {
         "type": "array",
         "items": {
            "type": "string"
         },
         "example": [
            "5c79e7a9fe6cd943bd499802",
            "5c79e827fe6cd943bd499803"
         ]
      },
      "ArchiveVideoBody": {
         "type": "array",
         "items": {
            "type": "number"
         },
         "example": [
            0
         ]
      },
      "VideoBody": {
         "type": "object",
         "title": "video",
         "required": [
            "candidateEmail"
         ],
         "properties": {
            "userId": {
               "type": "string",
               "example": "facebook|1948444908830936"
            },
            "candidateEmail": {
               "type": "string",
               "example": "russell@test.com"
            },
            "interviewId": {
               "type": "string",
               "example": "5c4c8d0b7cebba000854883d"
            },
            "interviewName": {
               "type": "string",
               "example": "Russell's Test Interview"
            },
            "userName": {
               "type": "string",
               "example": "Russell Ratcliffe"
            },
            "responses": {
               "type": "object",
               "title": "responses",
               "properties": {
                  "question": {
                     "type": "string",
                     "example": "whats your name?"
                  },
                  "response": {
                     "type": "string",
                     "example": "https://www.youtube.com/watch?v=5pX3mwnAvyo"
                  }
               }
            }
         }
      },
      "EventBody": {
         "type": "object",
         "title": "event",
         "properties": {
            "candidateEmail": {
               "type": "string",
               "example": "russell@deephire.com"
            },
            "companyId": {
               "type": "string",
               "example": "5dc5d305a4ea435efa57f644"
            },
            "interviewName": {
               "type": "string",
               "example": "Remote Interview"
            },
            "userName": {
               "type": "string",
               "example": "Russell Ratcliffe"
            }
         }
      },
      "DocumentBody": {
         "type": "object",
         "title": "document",
         "required": [
            "file",
            "objectKey"
         ],
         "properties": {
            "objectKey": {
               "type": "string",
               "example": "russell@test.com"
            },
            "file": {
               "type": "object",
               "title": "responses",
               "properties": {
                  "uid": {
                     "type": "string",
                     "example": "whats your name?"
                  }
               }
            }
         }
      },
      "InterviewBody": {
         "type": "object",
         "title": "interview",
         "required": [
            "interviewName",
            "interviewQuestions"
         ],
         "properties": {
            "interviewQuestions": {
               "type": "array",
               "items": {
                  "type": "object",
                  "title": "questions",
                  "properties": {
                     "question": {
                        "type": "string",
                        "example": "Tell us about yourself."
                     },
                     "hint": {
                        "type": "string",
                        "example": "Example: Hello my name is [Your Name]. I've been working as a [Profession] for [Number of] years.)"
                     },
                     "questionInfo": {
                        "type": "string",
                        "example": "This question is meant to give a quick summary of your relevant experience"
                     },
                     "tips": {
                        "type": "array",
                        "items": {
                           "type": "string"
                        },
                        "example": [
                           "Make sure you are in a quiet location",
                           "Focus on things you have done that are most relevant to what you want to do next"
                        ]
                     },
                     "exampleVideos": {
                        "type": "array",
                        "items": {
                           "type": "string"
                        },
                        "example": [
                           "https://www.youtube.com/watch?v=Tg6BVRTsuic",
                           "https://www.youtube.com/watch?v=4I3EhIFVHlA"
                        ]
                     },
                     "answerTime": {
                        "type": "number",
                        "example": 60
                     }
                  }
               }
            },
            "interviewName": {
               "type": "string",
               "example": "DH Sales Interview"
            },
            "interviewConfig": {
               "type": "object",
               "title": "config",
               "properties": {
                  "retakesAllowed": {
                     "type": "number",
                     "example": 8
                  },
                  "prepTime": {
                     "type": "number",
                     "example": 45
                  },
                  "answerTime": {
                     "type": "number",
                     "example": 90
                  }
               }
            }
         }
      },
      "TeamObject": {
         "type": "array",
         "items": {
            "type": "object",
            "properties": {
               "email": {
                  "type": "string"
               },
               "email_verified": {
                  "type": "boolean"
               },
               "name": {
                  "type": "string"
               },
               "given_name": {
                  "type": "string"
               },
               "family_name": {
                  "type": "string"
               },
               "picture": {
                  "type": "string"
               },
               "locale": {
                  "type": "string"
               },
               "updated_at": {
                  "type": "string"
               },
               "user_id": {
                  "type": "string"
               },
               "nickname": {
                  "type": "string"
               },
               "identities": {
                  "type": "array",
                  "items": {
                     "type": "object",
                     "properties": {
                        "provider": {
                           "type": "string"
                        },
                        "access_token": {
                           "type": "string"
                        },
                        "expires_in": {
                           "type": "integer"
                        },
                        "user_id": {
                           "type": "string"
                        },
                        "connection": {
                           "type": "string"
                        },
                        "isSocial": {
                           "type": "boolean"
                        }
                     },
                     "required": [
                        "provider",
                        "access_token",
                        "expires_in",
                        "user_id",
                        "connection",
                        "isSocial"
                     ]
                  }
               },
               "created_at": {
                  "type": "string"
               },
               "user_metadata": {
                  "type": "object"
               },
               "last_login": {
                  "type": "string"
               },
               "last_ip": {
                  "type": "string"
               },
               "logins_count": {
                  "type": "integer"
               },
               "app_metadata": {
                  "type": "object",
                  "properties": {
                     "companyId": {
                        "type": "string"
                     }
                  },
                  "required": [
                     "companyId"
                  ]
               }
            },
            "required": [
               "email",
               "email_verified",
               "name",
               "given_name",
               "family_name",
               "picture",
               "locale",
               "updated_at",
               "user_id",
               "nickname",
               "identities",
               "created_at",
               "user_metadata",
               "last_login",
               "last_ip",
               "logins_count",
               "app_metadata"
            ]
         }
      },
      "BrowserInfo": {
         "type": "object",
         "title": "browserDetails",
         "properties": {
            "deviceInfo": {
               "type": "object"
            }
         }
      },
      "CandidateInvitesBody": {
         "type": "object",
         "title": "The Root Schema",
         "required": [
            "recipients"
         ],
         "properties": {
            "recipients": {
               "$id": "#/properties/recipients",
               "type": "array",
               "title": "The Recipients Schema",
               "items": {
                  "$id": "#/properties/recipients/items",
                  "type": "object",
                  "title": "The Items Schema",
                  "required": [
                     "email",
                     "fullName"
                  ],
                  "properties": {
                     "email": {
                        "$id": "#/properties/recipients/items/properties/email",
                        "type": "string",
                        "title": "The Email Schema",
                        "example": "russell@deephire.com"
                     },
                     "fullName": {
                        "$id": "#/properties/recipients/items/properties/fullName",
                        "type": "string",
                        "title": "The Fullname Schema",
                        "example": "Russell Ratcliffe"
                     }
                  }
               }
            },
            "deadline": {
               "$id": "#/properties/deadline",
               "type": "string",
               "title": "The Deadline Schema",
               "example": "5/5/2021"
            },
            "messages": {
               "$id": "#/properties/messages",
               "type": "array",
               "title": "The Messages Schema",
               "items": {
                  "$id": "#/properties/messages/items",
                  "type": "object",
                  "title": "The Items Schema",
                  "required": [
                     "followUp",
                     "message"
                  ],
                  "properties": {
                     "followUp": {
                        "$id": "#/properties/messages/items/properties/followUp",
                        "type": "integer",
                        "title": "The Followup Schema",
                        "example": 2
                     },
                     "message": {
                        "$id": "#/properties/messages/items/properties/message",
                        "type": "string",
                        "title": "The Message Schema",
                        "example": "Hey dude"
                     }
                  }
               }
            }
         }
      }
   },
   "paths": {
      "/shortlists": {
         "get": {
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "Shortlists"
            ],
            "description": "Fetch all recruiter shortlist data",
            "responses": {
               "200": {
                  "description": "Returns all recruiter shortlist data"
               }
            }
         },
         "post": {
            "tags": [
               "Shortlists"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "in": "body",
                  "name": "body",
                  "description": "Create a new shortlist",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/ShortlistBody"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "Resource created or updated"
               },
               "500": {
                  "description": "Error!"
               }
            }
         }
      },
      "/shortlists/{id}": {
         "get": {
            "tags": [
               "Shortlists"
            ],
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "description": "The object id of the shortlist to fetch",
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The shortlist with the specified ID was successfully fetched"
               },
               "400": {
                  "description": "Malformed ID, the ID has to be a 12 character string"
               },
               "404": {
                  "description": "Shortlist with given ID did not exist"
               }
            }
         },
         "put": {
            "tags": [
               "Shortlists"
            ],
            "description": "Update Shortlist Data",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "id",
                  "required": true,
                  "type": "string"
               },
               {
                  "in": "body",
                  "name": "body",
                  "description": "an example",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/ShortlistBody"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Created or Updated Resource"
               }
            }
         }
      },
      "/shortlists/archives": {
         "get": {
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "Shortlists"
            ],
            "description": "Fetch all archives recruiter shortlist data",
            "responses": {
               "200": {
                  "description": "Returns all archives recruiter shortlist data"
               }
            }
         }
      },
      "/shortlists/archive": {
         "post": {
            "tags": [
               "Shortlists"
            ],
            "description": "Archive shortlists",
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "ids",
                  "in": "body",
                  "description": "ids to archive",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/ArchiveBody"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Archive Successful"
               }
            }
         }
      },
      "/shortlists/unarchive": {
         "post": {
            "tags": [
               "Shortlists"
            ],
            "description": "Unarchive shortlists",
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "ids",
                  "in": "body",
                  "description": "ids to unarchive",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/ArchiveBody"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Unarchive Successful"
               }
            }
         }
      },
      "/videos": {
         "get": {
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "Videos"
            ],
            "description": "Fetch all video interviews",
            "responses": {
               "200": {
                  "description": "Returns all video interviews"
               }
            }
         },
         "post": {
            "tags": [
               "Videos"
            ],
            "description": "Create or Update a Video",
            "parameters": [
               {
                  "name": "video",
                  "in": "body",
                  "description": "a video",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/VideoBody"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "Video Created"
               }
            }
         }
      },
      "/videos/filter": {
         "get": {
            "tags": [
               "Videos"
            ],
            "summary": "Filter candidate videos",
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "candidateEmail",
                  "in": "query",
                  "description": "Email to filter by",
                  "required": false,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "successful operation"
               },
               "400": {
                  "description": "Invalid email value"
               }
            }
         }
      },
      "/videos/proxy/{id}": {
         "get": {
            "tags": [
               "Videos"
            ],
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "description": "The id of the example to retrieve",
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "URL for the proxied video"
               },
               "404": {
                  "description": "Example not found"
               }
            }
         }
      },
      "/videos/{id}": {
         "get": {
            "tags": [
               "Videos"
            ],
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "description": "The id of the example to retrieve",
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Return the example with the specified id"
               },
               "404": {
                  "description": "Example not found"
               }
            }
         },
         "delete": {
            "tags": [
               "Videos"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "description": "The id of the users interview document (_id)",
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The candidate video interview with the specified ID was successfully deleted"
               },
               "400": {
                  "description": "Malformed ID, the ID has to be a 12 character string"
               },
               "404": {
                  "description": "Candidate video unterview with given IDs did not exist"
               }
            }
         }
      },
      "/videos/archives": {
         "get": {
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "Videos"
            ],
            "description": "Fetch all archives video interviews",
            "responses": {
               "200": {
                  "description": "Returns all archives video interviews"
               }
            }
         }
      },
      "/videos/{id}/archive": {
         "post": {
            "tags": [
               "Videos"
            ],
            "description": "Archive a Video response",
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "id",
                  "in": "path",
                  "description": "id",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "index",
                  "in": "body",
                  "description": "index to archive",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/ArchiveVideoBody"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Archive Successful"
               }
            }
         }
      },
      "/videos/{id}/unarchive": {
         "post": {
            "tags": [
               "Videos"
            ],
            "description": "Archive a Video response",
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "id",
                  "in": "path",
                  "description": "id",
                  "type": "string",
                  "required": true
               },
               {
                  "name": "index",
                  "in": "body",
                  "description": "index to archive",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/ArchiveVideoBody"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Archive Successful"
               }
            }
         }
      },
      "/videos/archive": {
         "post": {
            "tags": [
               "Videos"
            ],
            "description": "Archive videos",
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "ids",
                  "in": "body",
                  "description": "ids to archive",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/ArchiveBody"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Archive Successful"
               }
            }
         }
      },
      "/videos/unarchive": {
         "post": {
            "tags": [
               "Videos"
            ],
            "description": "Unarchive videos",
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "ids",
                  "in": "body",
                  "description": "ids to unarchive",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/ArchiveBody"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Unarchive Successful"
               }
            }
         }
      },
      "/videos/{id}/{questionId}": {
         "delete": {
            "tags": [
               "Videos"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "description": "The id of the users interview document (_id)",
                  "type": "string"
               },
               {
                  "name": "questionId",
                  "in": "path",
                  "required": true,
                  "description": "The question id",
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The candidate video question with the specified ID was successfully deleted"
               },
               "400": {
                  "description": "Malformed ID, the ID has to be a 12 character string"
               },
               "404": {
                  "description": "Candidate video with given IDs did not exist"
               }
            }
         }
      },
      "/interviews": {
         "get": {
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "Interviews"
            ],
            "description": "Fetch all interviews",
            "responses": {
               "200": {
                  "description": "Returns all interviews"
               }
            }
         },
         "post": {
            "tags": [
               "Interviews"
            ],
            "description": "Create an Interview",
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "interview",
                  "in": "body",
                  "description": "a new interview",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/InterviewBody"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "Video Created"
               }
            }
         }
      },
      "/interviews/duplicate": {
         "post": {
            "tags": [
               "Interviews"
            ],
            "description": "Duplicate interviews",
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "ids",
                  "in": "body",
                  "description": "ids to duplicate",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/ArchiveBody"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Duplicate Successful"
               }
            }
         }
      },
      "/interviews/{id}": {
         "get": {
            "tags": [
               "Interviews"
            ],
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "description": "The object id of the interview to get",
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The interview with the specified ID was successfully returned"
               },
               "400": {
                  "description": "Malformed ID, the ID has to be a 12 character string"
               },
               "404": {
                  "description": "Interview with given ID did not exist"
               }
            }
         },
         "put": {
            "tags": [
               "Interviews"
            ],
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "description": "The object id of the interview to put",
                  "type": "string"
               },
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "interview",
                  "in": "body",
                  "description": "a new interview",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/InterviewBody"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "The interview with the specified ID was successfully updated"
               },
               "400": {
                  "description": "Malformed ID, the ID has to be a 12 character string"
               },
               "404": {
                  "description": "Interview with given ID did not exist"
               }
            }
         },
         "delete": {
            "tags": [
               "Interviews"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "description": "The object id of the interview to delete",
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The interview with the specified ID was successfully deleted"
               },
               "400": {
                  "description": "Malformed ID, the ID has to be a 12 character string"
               },
               "404": {
                  "description": "Interview with given ID did not exist"
               }
            }
         }
      },
      "/interviews/{id}/invites": {
         "post": {
            "tags": [
               "Interviews"
            ],
            "description": "Invite to interview",
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "id",
                  "in": "path",
                  "description": "interview ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "body",
                  "in": "body",
                  "description": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/CandidateInvitesBody"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Invite Successful"
               }
            }
         }
      },
      "/interviews/{id}/feedback": {
         "post": {
            "tags": [
               "Interviews"
            ],
            "description": "Feedback for Interview",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "interview ID",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "body",
                  "in": "body",
                  "description": "body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/Feedback"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Feedback Successful"
               }
            }
         }
      },
      "/interviews/archives": {
         "get": {
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               }
            ],
            "tags": [
               "Interviews"
            ],
            "description": "Fetch all archives interviews",
            "responses": {
               "200": {
                  "description": "Returns all archives interviews"
               }
            }
         }
      },
      "/interviews/archive": {
         "post": {
            "tags": [
               "Interviews"
            ],
            "description": "Archive interviews",
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "ids",
                  "in": "body",
                  "description": "ids to archive",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/ArchiveBody"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Archive Successful"
               }
            }
         }
      },
      "/interviews/unarchive": {
         "post": {
            "tags": [
               "Interviews"
            ],
            "description": "Unarchive interviews",
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "ids",
                  "in": "body",
                  "description": "ids to unarchive",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/ArchiveBody"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Unarchive Successful"
               }
            }
         }
      },
      "/candidates/{email}": {
         "get": {
            "tags": [
               "Candidates"
            ],
            "parameters": [
               {
                  "name": "email",
                  "in": "path",
                  "required": true,
                  "description": "the candidates email",
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Fetched the candidates info"
               },
               "400": {
                  "description": "Malformed ID"
               },
               "404": {
                  "description": "Candidate with given ID did not exist"
               }
            }
         },
         "put": {
            "tags": [
               "Candidates"
            ],
            "description": "Create/Update Candidate Data",
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "email",
                  "in": "path",
                  "required": true,
                  "description": "the candidates email",
                  "type": "string"
               },
               {
                  "in": "body",
                  "name": "body",
                  "description": "an example",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/CandidateBody"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Created or Updated Resource"
               }
            }
         }
      },
      "/candidates/{email}/documents/": {
         "post": {
            "tags": [
               "Candidates"
            ],
            "description": "Upload candidate documents to S3",
            "consumes": [
               "multipart/form-data"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "email",
                  "in": "path",
                  "required": true,
                  "description": "the candidates email",
                  "type": "string"
               },
               {
                  "in": "formData",
                  "name": "upfile",
                  "type": "file",
                  "description": "The file to upload."
               }
            ],
            "responses": {
               "200": {
                  "description": "Created file on S3"
               }
            }
         }
      },
      "/candidates/{email}/documents/{id}": {
         "get": {
            "tags": [
               "Candidates"
            ],
            "description": "Get candidate document from s3",
            "parameters": [
               {
                  "name": "email",
                  "in": "path",
                  "required": true,
                  "description": "the candidates email",
                  "type": "string"
               },
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "description": "num of file",
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Got file from S3"
               }
            }
         },
         "delete": {
            "tags": [
               "Candidates"
            ],
            "description": "Delete candidate subdocument",
            "parameters": [
               {
                  "name": "email",
                  "in": "path",
                  "required": true,
                  "description": "the candidates email",
                  "type": "string"
               },
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "description": "id of file to delete",
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "file deleted"
               }
            }
         }
      },
      "/emails": {
         "post": {
            "tags": [
               "Emails"
            ],
            "parameters": [
               {
                  "in": "body",
                  "name": "body",
                  "description": "Send emails from russell@deephire.com",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/EmailBody"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "Email sent"
               },
               "500": {
                  "description": "Error!"
               }
            }
         }
      },
      "/companies": {
         "get": {
            "tags": [
               "Companies"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Returns company associated with your account"
               },
               "400": {
                  "description": "Invalid ObjectId attached to your account"
               },
               "404": {
                  "description": "You don't have a company"
               }
            }
         },
         "post": {
            "tags": [
               "Companies"
            ],
            "parameters": [
               {
                  "in": "body",
                  "name": "body",
                  "description": "Add Company Name or Logo",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/CompanyBody"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "Info Added"
               },
               "500": {
                  "description": "Error!"
               }
            }
         },
         "put": {
            "tags": [
               "Companies"
            ],
            "description": "Add/add data for your company",
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "in": "body",
                  "name": "body",
                  "description": "add company data",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/PutCompany"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Created file on S3"
               }
            }
         }
      },
      "/companies/payment_methods/{paymentMethodId}": {
         "post": {
            "tags": [
               "Companies"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "paymentMethodId",
                  "in": "path",
                  "required": true,
                  "description": "the payment method ID",
                  "type": "string"
               }
            ],
            "responses": {
               "201": {
                  "description": "Payment Method added"
               },
               "500": {
                  "description": "Unknown error"
               }
            }
         }
      },
      "/companies/card_wallet": {
         "get": {
            "tags": [
               "Companies"
            ],
            "responses": {
               "200": {
                  "description": "Returns your payment methods"
               },
               "500": {
                  "description": "Unknown error"
               }
            }
         }
      },
      "/companies/product": {
         "get": {
            "tags": [
               "Companies"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Returns your stripe product"
               },
               "400": {
                  "description": "Invalid ObjectId attached to your account"
               },
               "404": {
                  "description": "No stripe product found"
               }
            }
         }
      },
      "/companies/invoices": {
         "get": {
            "tags": [
               "Companies"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Returns your companies invoices"
               },
               "400": {
                  "description": "Invalid ObjectId attached to your account"
               },
               "404": {
                  "description": "No stripe invoices found"
               }
            }
         }
      },
      "/companies/subscriptions": {
         "get": {
            "tags": [
               "Companies"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Returns your stripe subscriptions"
               },
               "400": {
                  "description": "Invalid ObjectId attached to your account"
               },
               "404": {
                  "description": "No stripe subscriptions found"
               }
            }
         }
      },
      "/companies/payment_methods": {
         "get": {
            "tags": [
               "Companies"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Returns your payment methods"
               },
               "400": {
                  "description": "Invalid ObjectId attached to your account"
               },
               "404": {
                  "description": "No payment methods found"
               }
            }
         }
      },
      "/companies/team": {
         "get": {
            "tags": [
               "Companies"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Returns your team members",
                  "schema": {
                     "$ref": "#/definitions/TeamObject"
                  }
               },
               "400": {
                  "description": "Invalid ObjectId attached to your account"
               },
               "404": {
                  "description": "You don't belong to a company"
               }
            }
         }
      },
      "/companies/team/{teamMemberId}": {
         "delete": {
            "tags": [
               "Companies"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "teamMemberId",
                  "in": "path",
                  "required": true,
                  "description": "teamMemberId of the team member to delete",
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The team member with the specified ID was successfully deleted"
               },
               "400": {
                  "description": "Malformed ID, this should be an auth0 user_id"
               },
               "404": {
                  "description": "User with given ID did not exist"
               }
            }
         }
      },
      "/companies/invites": {
         "get": {
            "tags": [
               "Companies"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "201": {
                  "description": "Invite Successful"
               },
               "400": {
                  "description": "Invalid Request"
               },
               "404": {
                  "description": "Not found"
               },
               "500": {
                  "description": "Server Error"
               }
            }
         },
         "post": {
            "tags": [
               "Companies"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "in": "body",
                  "name": "body",
                  "description": "Invite Details",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/InviteBody"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "Invite Successful"
               },
               "500": {
                  "description": "Invite Failed"
               }
            }
         }
      },
      "/companies/invites/{inviteId}": {
         "get": {
            "tags": [
               "Companies"
            ],
            "parameters": [
               {
                  "name": "inviteId",
                  "in": "path",
                  "required": true,
                  "description": "id for the invite",
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The invite with the specified ID was successfully fetched"
               },
               "400": {
                  "description": "Malformed ID, the ID has to be a 12 character string"
               },
               "404": {
                  "description": "invite with given ID did not exist or has been deleted"
               }
            }
         },
         "put": {
            "tags": [
               "Companies"
            ],
            "description": "Resend an invite",
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "inviteId",
                  "in": "path",
                  "required": true,
                  "description": "id for the invite to resend",
                  "type": "string"
               }
            ],
            "responses": {
               "201": {
                  "description": "The invite with the specified ID was successfully"
               },
               "400": {
                  "description": "Malformed ID, the ID has to be a 12 character string"
               },
               "404": {
                  "description": "invite with given ID did not exist or has been deleted"
               }
            }
         },
         "delete": {
            "tags": [
               "Companies"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "inviteId",
                  "in": "path",
                  "required": true,
                  "description": "id of the invite to delete",
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "The invite with the specified ID was successfully deleted"
               },
               "400": {
                  "description": "Malformed ID, the ID has to be a 12 character string"
               },
               "404": {
                  "description": "Invite with given IDs did not exist"
               }
            }
         }
      },
      "/companies/logo": {
         "put": {
            "tags": [
               "Companies"
            ],
            "description": "Upload file to s3 and store public link in company object accociated with your account",
            "consumes": [
               "multipart/form-data"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "in": "formData",
                  "name": "upfile",
                  "type": "file",
                  "description": "The file to upload."
               }
            ],
            "responses": {
               "200": {
                  "description": "Created file on S3"
               }
            }
         }
      },
      "/companies/{companyId}": {
         "get": {
            "tags": [
               "Companies"
            ],
            "parameters": [
               {
                  "name": "companyId",
                  "in": "path",
                  "required": true,
                  "description": "The ID of the company to retrieve",
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Returns company information"
               },
               "400": {
                  "description": "Invalid ObjectId"
               },
               "404": {
                  "description": "A company with that id is not found"
               }
            }
         }
      },
      "/spec": {
         "get": {
            "tags": [
               "Specification"
            ],
            "responses": {
               "200": {
                  "description": "Return the API specification"
               }
            }
         }
      },
      "/files/{key}": {
         "post": {
            "tags": [
               "Files"
            ],
            "description": "Upload file documents to S3",
            "consumes": [
               "multipart/form-data"
            ],
            "parameters": [
               {
                  "name": "key",
                  "in": "path",
                  "required": true,
                  "description": "key",
                  "type": "string"
               },
               {
                  "in": "formData",
                  "name": "upfile",
                  "type": "file",
                  "description": "The file to upload."
               }
            ],
            "responses": {
               "200": {
                  "description": "Created file on S3"
               }
            }
         }
      },
      "/events": {
         "get": {
            "tags": [
               "Events"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Event Submitted"
               },
               "500": {
                  "description": "Server Error!"
               }
            }
         }
      },
      "/events/{interviewId}": {
         "get": {
            "tags": [
               "Events"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "interviewId",
                  "in": "path",
                  "required": true,
                  "description": "The ID of the interview to get events for",
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Event Submitted"
               },
               "400": {
                  "description": "interviewId is not a valid objectId"
               },
               "500": {
                  "description": "Server Error!"
               }
            }
         }
      },
      "/events/started": {
         "post": {
            "tags": [
               "Events"
            ],
            "parameters": [
               {
                  "in": "body",
                  "name": "body",
                  "description": "Interview Started Event",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/EventBody"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "Event Submitted"
               },
               "500": {
                  "description": "Error!"
               }
            }
         }
      },
      "/events/clicked": {
         "post": {
            "tags": [
               "Events"
            ],
            "parameters": [
               {
                  "in": "body",
                  "name": "body",
                  "description": "Interview Clicked Event",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/EventBody"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "Event Submitted"
               },
               "500": {
                  "description": "Error!"
               }
            }
         }
      },
      "/events/victory": {
         "post": {
            "tags": [
               "Events"
            ],
            "parameters": [
               {
                  "in": "body",
                  "name": "body",
                  "description": "Create a new shortlist",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/EventBody"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "Event Submitted"
               },
               "500": {
                  "description": "Error!"
               }
            }
         }
      },
      "/profiles": {
         "get": {
            "tags": [
               "Profiles"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "returns profile info"
               },
               "404": {
                  "description": "no profile exists"
               }
            }
         }
      },
      "/live": {
         "get": {
            "tags": [
               "Live"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "all live interviews for that company",
                  "schema": {
                     "$ref": "#/definitions/Live"
                  }
               },
               "404": {
                  "description": "no live interviews"
               }
            }
         },
         "post": {
            "tags": [
               "Live"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "in": "body",
                  "name": "body",
                  "description": "Create a new interview. If interviewType is `client` then `clientName` and `clientEmail` are also required.",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/LiveRequestBody"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "Event Submitted",
                  "schema": {
                     "$ref": "#/definitions/Live"
                  }
               },
               "500": {
                  "description": "Error!"
               }
            }
         }
      },

      "/live/templates": {
         "get": {
            "tags": [
               "Live"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "live interview templates"
               },
               "404": {
                  "description": "no templates"
               }
            }
         }
      },
      "/live/{liveId}": {
         "get": {
            "tags": [
               "Live"
            ],
            "parameters": [
               {
                  "name": "liveId",
                  "in": "path",
                  "required": true,
                  "description": "liveId to look up",
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "returns live interview info"
               },
               "404": {
                  "description": "no live interview exists"
               }
            }
         },
         "put": {
            "tags": [
               "Live"
            ],
            "parameters": [
               {
                  "name": "liveId",
                  "in": "path",
                  "required": true,
                  "description": "liveId to look up",
                  "type": "string"
               },
               {
                  "in": "body",
                  "name": "body",
                  "description": "example body",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/Live"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "updated live interview"
               },
               "404": {
                  "description": "no live interview exists"
               }
            }
         },
         "delete": {
            "tags": [
               "Live"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "liveId",
                  "in": "path",
                  "required": true,
                  "description": "liveId to delete recordings for",
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Live Interview Deleted"
               },
               "400": {
                  "description": "Invalid Request format"
               },
               "404": {
                  "description": "no live interview exists"
               }
            }
         }
      },

      
      "/live/{liveId}/recordings": {
      "delete": {
         "tags": [
            "Live"
         ],
         "parameters": [
            {
               "name": "authorization",
               "in": "header",
               "description": "Bearer <auth_token>",
               "required": true,
               "type": "string"
            },
            {
               "name": "liveId",
               "in": "path",
               "required": true,
               "description": "liveId to look up",
               "type": "string"
            }
         ],
         "responses": {
            "200": {
               "description": "Live Interview Deleted"
            },
            "400": {
               "description": "Invalid Request format"
            },
            "404": {
               "description": "no live interview exists"
            }
         }
      }
   },
      "/live/{liveId}/participants": {
         "put": {
            "tags": [
               "Live"
            ],
            "parameters": [
               {
                  "name": "liveId",
                  "in": "path",
                  "required": true,
                  "description": "liveId to look up",
                  "type": "string"
               },
               {
                  "in": "body",
                  "name": "body",
                  "description": "Participant",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/Participant"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "updated live interview"
               },
               "404": {
                  "description": "no live interview exists"
               }
            }
         }
      },
      "/live/events": {
         "post": {
            "tags": [
               "Live"
            ],
            "description": "Handle Twilio Webhooks",
            "consumes": [
               "application/x-www-form-urlencoded"
            ],
            "parameters": [
               {
                  "in": "formData",
                  "name": "StatusCallbackEvent",
                  "type": "string",
                  "description": "The Twilio Callback Event"
               },
               {
                  "in": "formData",
                  "name": "RoomSid",
                  "type": "string",
                  "description": "The Room Sid"
               },
               {
                  "in": "formData",
                  "name": "CompositionSid",
                  "type": "string",
                  "description": "The Composition Sid"
               },
               {
                  "in": "formData",
                  "name": "RoomName",
                  "type": "string",
                  "description": "The Room Name"
               },
               {
                  "in": "formData",
                  "name": "ParticipantDuration",
                  "type": "string",
                  "description": "The ParticipantDuration"
               }
            ],
            "responses": {
               "200": {
                  "description": "Created file on S3"
               }
            }
         }
      },
      "/live/{liveId}/comments": {
         "post": {
            "tags": [
               "Live"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "liveId",
                  "in": "path",
                  "required": true,
                  "description": "_id for the live interview",
                  "type": "string"
               },
               {
                  "name": "comment",
                  "in": "body",
                  "description": "A new comment on a live video",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/Comment"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "Comment Added"
               },
               "400": {
                  "description": "invalid request (invalid objectId?)"
               }
            }
         }
      },
      "/live/{liveId}/comments/{commentId}": {
         "delete": {
            "tags": [
               "Live"
            ],
            "parameters": [
               {
                  "name": "authorization",
                  "in": "header",
                  "description": "Bearer <auth_token>",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "liveId",
                  "in": "path",
                  "required": true,
                  "description": "_id for the live interview",
                  "type": "string"
               },
               {
                  "name": "commentId",
                  "type": "string",
                  "in": "path",
                  "required": true,
                  "description": "_id of the comment to delete"
               }
            ],
            "responses": {
               "200": {
                  "description": "Comment Deleted"
               },
               "404": {
                  "description": "Comment not found"
               }
            }
         }
      }
   }
}